#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



// higher number layers take precedence / override below
#define DFLT 0

// task specific layers
#define RNAV 1

// base layers which should always be accessible (i.e. num, nav, sys)
#define BASE 2 // same as DFLT except for thumbs, used to override DFLT keys onto custom layers
#define NUM  3 // numbers layer - numbers, symbols, function keys
#define NAV  4 // navigation layer - arrow keys, media controls
#define SYS  5 // system layer - toggle layer, bt controls

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        // num + nav = sys
        num_nav_sys_layer {
            if-layers = <NUM NAV>;
            then-layer = <SYS>;
        };

        // num + base = sys
        num_base_sys_layer {
            if-layers = <NUM BASE>;
            then-layer = <SYS>;
        };

    };

    behaviors {

        // double-tap LSHIFT to turn on CAPS WORD
        td_shft_caps: td_shft_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHFT CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };

        // double-tap ` esc
        td_gre_esc: td_gre_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "GRAVE ESC";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp GRAVE>, <&kp ESC>;
        };

    };

    combos {
            compatible = "zmk,combos";
            
        // qw = ESC
        esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        // qe = ALT+F4
        altf4 {
            timeout-ms = <50>;
            key-positions = <0 2>;
            bindings = <&kp LA(F4)>;
        };

        // ;bkps = DEL
        del {
            timeout-ms = <50>;
            key-positions = <19 31>;
            bindings = <&kp DEL>;
        };

        // io = (
        lpar {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp LPAR>;
        };
        // op = )
        rpar {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp RPAR>;
        };

        // kl = [
        lbkt {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp LBKT>;
        };
        // l; = ]
        rbkt {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp RBKT>;
        };

        // ,. = {
        lbrc {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LBRC>;
        };
        // ./ = }
        rbrc {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp RBRC>;
        };

    };



        keymap {
                compatible = "zmk,keymap";


        // default layer

                dflt {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "default"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//               ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓   ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
//               ┃       Q     ┃       W     ┃       E     ┃       R     ┃       T     ┃   ┃       Y     ┃       U     ┃       I     ┃       O     ┃       P     ┃
//               ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
//               ┃       A     ┃       S     ┃       D     ┃       F     ┃       G     ┃   ┃       H     ┃       J     ┃       K     ┃       L     ┃       ;     ┃
// ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓
// ┃  TAB / SHFT ┃   Z / ALT   ┃       X     ┃       C     ┃       V     ┃       B     ┃   ┃       N     ┃       M     ┃       ,     ┃       .     ┃    / ALT    ┃      BSPC   ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
//                                           ┃     LCTRL   ┃     LGUI    ┃   SPC / NUM ┃   ┃  RET / NAV  ┃     SHFT    ┃      ESC    ┃
//                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛   ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
 bindings = <
// ╷             ╷             ╷             ╷             ╷             ╷             ╷   ╷             ╷             ╷             ╷             ╷             ╷             ╷

                  &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
                  &kp A         &kp S         &kp D         &kp F         &kp G             &kp H         &kp J         &kp K         &kp L         &kp SEMI
    &mt LSHFT TAB &mt LALT Z    &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA     &kp DOT       &mt RALT FSLH &kp BSPC
                                              &kp LCTRL     &kp LGUI      &lt NUM SPACE     &lt NAV RET   &kp RSHFT     &kp ESC
                        >;
                };


        // custom layer

                rnav {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "r nav"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//               ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓   ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
//               ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃             ┃      UP     ┃             ┃             ┃
//               ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
//               ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃      LEFT   ┃     DOWN    ┃    RIGHT    ┃             ┃
// ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓
// ┃             ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃             ┃             ┃             ┃             ┃             ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
//                                           ┃             ┃             ┃             ┃   ┃  RET / BASE ┃             ┃             ┃
//                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛   ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
 bindings = <
// ╷             ╷             ╷             ╷             ╷             ╷             ╷   ╷             ╷             ╷             ╷             ╷             ╷             ╷


                  &trans        &trans        &trans        &trans        &trans            &trans        &trans        &kp UP        &trans        &trans
                  &trans        &trans        &trans        &trans        &trans            &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &trans
    &trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &trans        &trans
                                              &trans        &trans        &trans            &lt BASE RET  &trans        &trans
                        >;
                };


        // base layers

                base {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "base"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//               ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓   ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
//               ┃       Q     ┃       W     ┃       E     ┃       R     ┃       T     ┃   ┃       Y     ┃       U     ┃       I     ┃       O     ┃       P     ┃
//               ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
//               ┃       A     ┃       S     ┃       D     ┃       F     ┃       G     ┃   ┃       H     ┃       J     ┃       K     ┃       L     ┃       ;     ┃
// ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓
// ┃  TAB / SHFT ┃   Z / ALT   ┃       X     ┃       C     ┃       V     ┃       B     ┃   ┃       N     ┃       M     ┃       ,     ┃       .     ┃    / ALT    ┃      BSPC   ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
//                                           ┃     LCTRL   ┃     LGUI    ┃   SPC / NUM ┃   ┃  RET / NAV  ┃     SHFT    ┃      ESC    ┃
//                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛   ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
 bindings = <
// ╷             ╷             ╷             ╷             ╷             ╷             ╷   ╷             ╷             ╷             ╷             ╷             ╷             ╷

                  &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
                  &kp A         &kp S         &kp D         &kp F         &kp G             &kp H         &kp J         &kp K         &kp L         &kp SEMI
    &mt LSHFT TAB &mt LALT Z    &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA     &kp DOT       &mt RALT FSLH &kp BSPC
                                              &kp LCTRL     &kp LGUI      &lt NUM SPACE     &lt NAV RET   &kp RSHFT     &kp ESC
                        >;
                };

                num {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "num"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//               ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓   ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
//               ┃       1!    ┃       2@    ┃       3#    ┃       4$    ┃       5%    ┃   ┃       6^    ┃       7&    ┃       8*    ┃       9(    ┃       0)    ┃
//               ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
//               ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃       -_    ┃       =+    ┃       `~    ┃       '"    ┃
// ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓
// ┃             ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃             ┃             ┃             ┃       \     ┃             ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
//                                           ┃             ┃             ┃             ┃   ┃             ┃             ┃             ┃
//                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛   ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
 bindings = <
// ╷             ╷             ╷             ╷             ╷             ╷             ╷   ╷             ╷             ╷             ╷             ╷             ╷             ╷

                  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0       
                  &trans        &trans        &trans        &trans        &trans            &trans        &kp MINUS     &kp EQUAL     &kp GRAVE     &kp SQT 
    &trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &kp BSLH       &trans         
                                              &trans        &trans        &trans            &trans        &trans        &trans      
                        >;
                };

                nav {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "nav"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//               ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓   ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
//               ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃  P DOWN     ┃    UP       ┃   P UP      ┃             ┃
//               ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
//               ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃      LEFT   ┃     DOWN    ┃     RIGHT   ┃             ┃
// ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓
// ┃             ┃             ┃             ┃             ┃             ┃             ┃   ┃             ┃             ┃             ┃             ┃             ┃             ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
//                                           ┃             ┃             ┃             ┃   ┃             ┃             ┃             ┃
//                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛   ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
 bindings = <
// ╷             ╷             ╷             ╷             ╷             ╷             ╷   ╷             ╷             ╷             ╷             ╷             ╷             ╷


                  &trans        &trans        &trans        &trans        &trans            &trans        &kp PG_DN     &kp UP       &kp PG_UP     &trans
                  &trans        &trans        &trans        &trans        &trans            &trans        &kp LEFT      &kp DOWN     &kp RIGHT     &trans
    &trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans       &trans        &trans         &trans      
                                              &trans        &trans        &trans            &trans        &trans        &trans      
                        >;
                };

                sys {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "system"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//               ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓   ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
//               ┃      F1     ┃      F2     ┃      F3     ┃      F4     ┃             ┃   ┃   BT 1      ┃   BT 2      ┃   BT 3      ┃    BT 4     ┃    BT 5     ┃
//               ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫
//               ┃      F5     ┃      F6     ┃      F7     ┃      F8     ┃             ┃   ┃   VOL -     ┃   VOL +     ┃   MUTE      ┃             ┃             ┃
// ┏━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┓
// ┃             ┃      F9     ┃      F10    ┃      F11    ┃      F12    ┃             ┃   ┃   DFLT      ┃   RNAV      ┃             ┃             ┃             ┃   BT CLR    ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫   ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
//                                           ┃             ┃             ┃             ┃   ┃             ┃             ┃             ┃
//                                           ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛   ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
 bindings = <
// ╷             ╷             ╷             ╷             ╷             ╷             ╷   ╷             ╷             ╷             ╷             ╷             ╷             ╷

                  &kp F1        &kp F2        &kp F3        &kp F4        &trans            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                  &kp F5        &kp F6        &kp F7        &kp F8        &trans            &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &trans        &trans  
    &trans        &kp F9        &kp F10       &kp F11       &kp F12       &trans            &to DFLT      &to RNAV      &trans        &trans        &trans        &bt BT_CLR 
                                              &trans        &trans        &trans            &trans        &trans        &trans      
                        >;
                };

        };
};
